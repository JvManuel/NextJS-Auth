{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport cookie from 'next-cookies';\nconst initialState = {\n  user: cookie.get('user')\n};\n\nconst reducer = (state = initialState, action) => {\n  // switch (action.type) {\n  //     case 'TICK':\n  //     return {\n  //         ...state,\n  //         lastUpdate: action.lastUpdate,\n  //         light: !!action.light\n  //     }\n  //     case 'INCREMENT':\n  //     return {\n  //         ...state,\n  //         count: state.count + 1\n  //     }\n  //     case 'DECREMENT':\n  //     return {\n  //         ...state,\n  //         count: state.count - 1\n  //     }\n  //     case 'RESET':\n  //     return {\n  //         ...state,\n  //         count: initialState.count\n  //     }\n  //     default:\n  //     return state\n  // }\n  return state;\n};\n\nexport const initializeStore = (preloadedState = initialState) => {\n  return createStore(reducer, preloadedState, composeWithDevTools(applyMiddleware()));\n};","map":{"version":3,"sources":["/home/john_vincent/Next/nextjs-auth/store/index.js"],"names":["createStore","applyMiddleware","composeWithDevTools","cookie","initialState","user","get","reducer","state","action","initializeStore","preloadedState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAEF,MAAM,CAACG,GAAP,CAAW,MAAX;AADW,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAOD,KAAP;AACH,CA3BD;;AA6BA,OAAO,MAAME,eAAe,GAAG,CAACC,cAAc,GAAGP,YAAlB,KAAmC;AAC9D,SAAOJ,WAAW,CACdO,OADc,EAEdI,cAFc,EAGdT,mBAAmB,CAACD,eAAe,EAAhB,CAHL,CAAlB;AAKH,CANM","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport cookie from 'next-cookies'\n\nconst initialState = {\n    user: cookie.get('user')\n}\n  \nconst reducer = (state = initialState, action) => {\n    // switch (action.type) {\n    //     case 'TICK':\n    //     return {\n    //         ...state,\n    //         lastUpdate: action.lastUpdate,\n    //         light: !!action.light\n    //     }\n    //     case 'INCREMENT':\n    //     return {\n    //         ...state,\n    //         count: state.count + 1\n    //     }\n    //     case 'DECREMENT':\n    //     return {\n    //         ...state,\n    //         count: state.count - 1\n    //     }\n    //     case 'RESET':\n    //     return {\n    //         ...state,\n    //         count: initialState.count\n    //     }\n    //     default:\n    //     return state\n    // }\n    return state\n}\n\nexport const initializeStore = (preloadedState = initialState) => {\n    return createStore(\n        reducer,\n        preloadedState,\n        composeWithDevTools(applyMiddleware())\n    )\n}"]},"metadata":{},"sourceType":"module"}