{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/john_vincent/Next/nextjs-auth/pages/login/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from \"../../components/layout\";\nimport { withAuthSync, authenticate } from \"../../utils/auth\";\n\nvar Login =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n    _this.state = {\n      email: '',\n      password: '',\n      error: ''\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"submit\",\n    value: function () {\n      var _submit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var email, password, url, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                email = this.state.email;\n                password = this.state.password;\n                url = process.env.API_URL + '/a/auth/login';\n                _context.prev = 4;\n                _context.next = 7;\n                return fetch(url, {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: _JSON$stringify({\n                    email: email,\n                    password: password\n                  })\n                }).then(function (response) {\n                  return response.json();\n                });\n\n              case 7:\n                response = _context.sent;\n                _context.next = 10;\n                return authenticate(response.data.token);\n\n              case 10:\n                _context.next = 14;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](4);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[4, 12]]);\n      }));\n\n      function submit(_x) {\n        return _submit.apply(this, arguments);\n      }\n\n      return submit;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, __jsx(\"form\", {\n        onSubmit: this.submit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, __jsx(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Login\")), __jsx(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: this.state.email,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            email: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), __jsx(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: this.state.password,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            password: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), __jsx(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Login\"), this.state.error && __jsx(\"p\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Error: \", this.state.error))));\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nexport default Login;","map":{"version":3,"sources":["/home/john_vincent/Next/nextjs-auth/pages/login/index.js"],"names":["React","useState","fetch","Layout","withAuthSync","authenticate","Login","props","state","email","password","error","event","preventDefault","url","process","env","API_URL","method","headers","body","then","response","json","data","token","submit","bind","setState","target","value","Component"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport fetch from 'isomorphic-unfetch'\nimport Layout from 'components/layout'\nimport { withAuthSync, authenticate } from 'utils/auth'\n\nclass Login extends React.Component {\n  constructor(props){\n    super(props)\n    this.state  = { \n      email: '',\n      password: '',\n      error: ''\n    }\n  }\n  async submit (event) {\n    event.preventDefault()\n\n    const email = this.state.email\n    const password = this.state.password\n\n    const url = process.env.API_URL + '/a/auth/login' \n    \n    try{\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      })\n      .then(response => response.json())\n      await authenticate(response.data.token)\n    } catch (error){\n\n    }\n  }\n  render() {\n\n    return <Layout>\n    <div className='login'>\n      <form onSubmit={this.submit.bind(this)}>\n        <center>\n          <label htmlFor='email'>Login</label>\n        </center>\n\n        <input\n          type='text'\n          id='email'\n          name='email'\n          placeholder='Email'\n          value={this.state.email}\n          onChange={ event => this.setState({email:event.target.value}) }\n        />\n\n        <input\n          type='password'\n          id='password'\n          name='password'\n          placeholder='Password'\n          value={this.state.password}\n          onChange={ event => this.setState({password:event.target.value}) }\n        />\n\n        <button type='submit'>Login</button>\n\n        {this.state.error && <p className='error'>Error: {this.state.error}</p>}\n      </form>\n    </div>\n  </Layout>\n  }\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}