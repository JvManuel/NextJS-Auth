{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/home/john_vincent/Next/nextjs-auth/utils/auth.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from 'react';\nimport Router from 'next/router';\nimport nextCookie from 'next-cookies';\nimport cookie from 'js-cookie';\nimport { userInfo } from 'os';\nimport { useDispatch } from 'react-redux';\nexport const authenticate = async token => {\n  cookie.set('token', token, {\n    expires: 1\n  });\n  const response = await fetch(process.env.API_URL + '/a/me', {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + token\n    }\n  }).then(response => response.json());\n  cookie.set('user', _JSON$stringify(response.data));\n  Router.push('/profile');\n};\nexport const user = () => {\n  if (cookie.get('user') !== undefined) {\n    return JSON.parse(cookie.get('user'));\n  }\n};\nexport const auth = ctx => {\n  const {\n    token\n  } = nextCookie(ctx);\n  /*\n   * If `ctx.req` is available it means we are on the server.\n   * Additionally if there's no token it means the user is not logged in.\n   */\n\n  if (ctx.req && !token) {\n    ctx.res.writeHead(302, {\n      Location: '/login'\n    });\n    ctx.res.end();\n  } // We already checked for server. This should only happen on client.\n\n\n  if (!token) {\n    Router.push('/login');\n  }\n\n  return token;\n};\nexport const logout = () => {\n  cookie.remove('token');\n  cookie.remove('user'); // to support logging out from all windows\n\n  window.localStorage.setItem('logout', _Date$now());\n  Router.push('/login');\n};\nexport const isAuth = () => {\n  if (cookie.get('token') == undefined) {\n    return false;\n  }\n\n  return true;\n};\nexport const withAuthSync = WrappedComponent => {\n  const Wrapper = props => {\n    const syncLogout = event => {\n      if (event.key === 'logout') {\n        console.log('logged out from storage!');\n        Router.push('/login');\n      }\n    };\n\n    useEffect(() => {\n      window.addEventListener('storage', syncLogout);\n      return () => {\n        window.removeEventListener('storage', syncLogout);\n        window.localStorage.removeItem('logout');\n      };\n    }, [null]);\n    return __jsx(WrappedComponent, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }));\n  };\n\n  Wrapper.getInitialProps = async ctx => {\n    const token = auth(ctx);\n    const componentProps = WrappedComponent.getInitialProps && (await WrappedComponent.getInitialProps(ctx));\n    return _objectSpread({}, componentProps, {\n      token\n    });\n  };\n\n  return Wrapper;\n};","map":{"version":3,"sources":["/home/john_vincent/Next/nextjs-auth/utils/auth.js"],"names":["useEffect","Router","nextCookie","cookie","userInfo","useDispatch","authenticate","token","set","expires","response","fetch","process","env","API_URL","method","headers","then","json","data","push","user","get","undefined","JSON","parse","auth","ctx","req","res","writeHead","Location","end","logout","remove","window","localStorage","setItem","isAuth","withAuthSync","WrappedComponent","Wrapper","props","syncLogout","event","key","console","log","addEventListener","removeEventListener","removeItem","getInitialProps","componentProps"],"mappings":";;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,QAAT,QAAyB,IAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAOC,KAAP,IAAiB;AAC3CJ,EAAAA,MAAM,CAACK,GAAP,CAAW,OAAX,EAAoBD,KAApB,EAA2B;AAAEE,IAAAA,OAAO,EAAE;AAAX,GAA3B;AACA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYC,OAAZ,GAAsB,OAAvB,EAAgC;AAC1DC,IAAAA,MAAM,EAAE,KADkD;AAE1DC,IAAAA,OAAO,EAAE;AACP,sBAAiB,kBADV;AAEP,uBAAiB,YAAYT;AAFtB;AAFiD,GAAhC,CAAL,CAOtBU,IAPsB,CAOjBP,QAAQ,IAAIA,QAAQ,CAACQ,IAAT,EAPK,CAAvB;AAQAf,EAAAA,MAAM,CAACK,GAAP,CAAW,MAAX,EAAmB,gBAAeE,QAAQ,CAACS,IAAxB,CAAnB;AACAlB,EAAAA,MAAM,CAACmB,IAAP,CAAY,UAAZ;AACD,CAZM;AAcP,OAAO,MAAMC,IAAI,GAAG,MAAM;AACxB,MAAGlB,MAAM,CAACmB,GAAP,CAAW,MAAX,MAAuBC,SAA1B,EAAoC;AAClC,WAAOC,IAAI,CAACC,KAAL,CAAWtB,MAAM,CAACmB,GAAP,CAAW,MAAX,CAAX,CAAP;AACD;AACF,CAJM;AAMP,OAAO,MAAMI,IAAI,GAAGC,GAAG,IAAI;AACzB,QAAM;AAAEpB,IAAAA;AAAF,MAAYL,UAAU,CAACyB,GAAD,CAA5B;AAEA;;;;;AAIA,MAAIA,GAAG,CAACC,GAAJ,IAAW,CAACrB,KAAhB,EAAuB;AACrBoB,IAAAA,GAAG,CAACE,GAAJ,CAAQC,SAAR,CAAkB,GAAlB,EAAuB;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAvB;AACAJ,IAAAA,GAAG,CAACE,GAAJ,CAAQG,GAAR;AACD,GAVwB,CAYzB;;;AACA,MAAI,CAACzB,KAAL,EAAY;AACVN,IAAAA,MAAM,CAACmB,IAAP,CAAY,QAAZ;AACD;;AAED,SAAOb,KAAP;AACD,CAlBM;AAoBP,OAAO,MAAM0B,MAAM,GAAG,MAAM;AAC1B9B,EAAAA,MAAM,CAAC+B,MAAP,CAAc,OAAd;AACA/B,EAAAA,MAAM,CAAC+B,MAAP,CAAc,MAAd,EAF0B,CAG1B;;AACAC,EAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,QAA5B,EAAsC,WAAtC;AACApC,EAAAA,MAAM,CAACmB,IAAP,CAAY,QAAZ;AACD,CANM;AAQP,OAAO,MAAMkB,MAAM,GAAG,MAAM;AAC1B,MAAGnC,MAAM,CAACmB,GAAP,CAAW,OAAX,KAAuBC,SAA1B,EAAoC;AAClC,WAAO,KAAP;AACD;;AACD,SAAO,IAAP;AACD,CALM;AAOP,OAAO,MAAMgB,YAAY,GAAGC,gBAAgB,IAAI;AAC9C,QAAMC,OAAO,GAAGC,KAAK,IAAI;AACvB,UAAMC,UAAU,GAAGC,KAAK,IAAI;AAC1B,UAAIA,KAAK,CAACC,GAAN,KAAc,QAAlB,EAA4B;AAC1BC,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA9C,QAAAA,MAAM,CAACmB,IAAP,CAAY,QAAZ;AACD;AACF,KALD;;AAOApB,IAAAA,SAAS,CAAC,MAAM;AACdmC,MAAAA,MAAM,CAACa,gBAAP,CAAwB,SAAxB,EAAmCL,UAAnC;AAEA,aAAO,MAAM;AACXR,QAAAA,MAAM,CAACc,mBAAP,CAA2B,SAA3B,EAAsCN,UAAtC;AACAR,QAAAA,MAAM,CAACC,YAAP,CAAoBc,UAApB,CAA+B,QAA/B;AACD,OAHD;AAID,KAPQ,EAON,CAAC,IAAD,CAPM,CAAT;AASA,WAAO,MAAC,gBAAD,eAAsBR,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAlBD;;AAoBAD,EAAAA,OAAO,CAACU,eAAR,GAA0B,MAAMxB,GAAN,IAAa;AACrC,UAAMpB,KAAK,GAAGmB,IAAI,CAACC,GAAD,CAAlB;AAEA,UAAMyB,cAAc,GAClBZ,gBAAgB,CAACW,eAAjB,KACC,MAAMX,gBAAgB,CAACW,eAAjB,CAAiCxB,GAAjC,CADP,CADF;AAIA,6BAAYyB,cAAZ;AAA4B7C,MAAAA;AAA5B;AACD,GARD;;AAUA,SAAOkC,OAAP;AACD,CAhCM","sourcesContent":["import { useEffect } from 'react'\nimport Router from 'next/router'\nimport nextCookie from 'next-cookies'\nimport cookie from 'js-cookie'\nimport { userInfo } from 'os'\nimport { useDispatch } from 'react-redux'\n\nexport const authenticate = async (token) => {\n  cookie.set('token', token, { expires: 1 })\n  const response = await fetch(process.env.API_URL + '/a/me', {\n    method: 'GET',\n    headers: {\n      'Content-Type' : 'application/json',\n      'Authorization': 'Bearer ' + token\n    },\n  })\n  .then(response => response.json())\n  cookie.set('user', JSON.stringify(response.data))\n  Router.push('/profile')\n}\n\nexport const user = () => {\n  if(cookie.get('user') !== undefined){\n    return JSON.parse(cookie.get('user'))\n  }\n}\n\nexport const auth = ctx => {\n  const { token } = nextCookie(ctx)\n\n  /*\n   * If `ctx.req` is available it means we are on the server.\n   * Additionally if there's no token it means the user is not logged in.\n   */\n  if (ctx.req && !token) {\n    ctx.res.writeHead(302, { Location: '/login' })\n    ctx.res.end()\n  }\n\n  // We already checked for server. This should only happen on client.\n  if (!token) {\n    Router.push('/login')\n  }\n\n  return token\n}\n\nexport const logout = () => {\n  cookie.remove('token')\n  cookie.remove('user')\n  // to support logging out from all windows\n  window.localStorage.setItem('logout', Date.now())\n  Router.push('/login')\n}\n\nexport const isAuth = () => {\n  if(cookie.get('token') == undefined){\n    return false;\n  }\n  return true;\n}\n\nexport const withAuthSync = WrappedComponent => {\n  const Wrapper = props => {\n    const syncLogout = event => {\n      if (event.key === 'logout') {\n        console.log('logged out from storage!')\n        Router.push('/login')\n      }\n    }\n\n    useEffect(() => {\n      window.addEventListener('storage', syncLogout)\n\n      return () => {\n        window.removeEventListener('storage', syncLogout)\n        window.localStorage.removeItem('logout')\n      }\n    }, [null])\n\n    return <WrappedComponent {...props} />\n  }\n\n  Wrapper.getInitialProps = async ctx => {\n    const token = auth(ctx)\n\n    const componentProps =\n      WrappedComponent.getInitialProps &&\n      (await WrappedComponent.getInitialProps(ctx))\n\n    return { ...componentProps, token }\n  }\n\n  return Wrapper\n}\n"]},"metadata":{},"sourceType":"module"}