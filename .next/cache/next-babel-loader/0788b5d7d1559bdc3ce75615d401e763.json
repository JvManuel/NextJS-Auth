{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nconst initialState = {\n  lastUpdate: 0,\n  light: false,\n  count: 0\n};\n\nconst reducer = (state = initialState, action) => {// switch (action.type) {\n  //     case 'TICK':\n  //     return {\n  //         ...state,\n  //         lastUpdate: action.lastUpdate,\n  //         light: !!action.light\n  //     }\n  //     case 'INCREMENT':\n  //     return {\n  //         ...state,\n  //         count: state.count + 1\n  //     }\n  //     case 'DECREMENT':\n  //     return {\n  //         ...state,\n  //         count: state.count - 1\n  //     }\n  //     case 'RESET':\n  //     return {\n  //         ...state,\n  //         count: initialState.count\n  //     }\n  //     default:\n  //     return state\n  // }\n};\n\nexport const initializeStore = (preloadedState = initialState) => {\n  return createStore(reducer, preloadedState, composeWithDevTools(applyMiddleware()));\n};","map":{"version":3,"sources":["/home/john_vincent/Next/nextjs-auth/store/index.js"],"names":["createStore","applyMiddleware","composeWithDevTools","initialState","lastUpdate","light","count","reducer","state","action","initializeStore","preloadedState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,CADK;AAEjBC,EAAAA,KAAK,EAAE,KAFU;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC,CAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CA1BD;;AA4BA,OAAO,MAAMC,eAAe,GAAG,CAACC,cAAc,GAAGR,YAAlB,KAAmC;AAC9D,SAAOH,WAAW,CACdO,OADc,EAEdI,cAFc,EAGdT,mBAAmB,CAACD,eAAe,EAAhB,CAHL,CAAlB;AAKH,CANM","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nconst initialState = {\n    lastUpdate: 0,\n    light: false,\n    count: 0\n}\n  \nconst reducer = (state = initialState, action) => {\n    // switch (action.type) {\n    //     case 'TICK':\n    //     return {\n    //         ...state,\n    //         lastUpdate: action.lastUpdate,\n    //         light: !!action.light\n    //     }\n    //     case 'INCREMENT':\n    //     return {\n    //         ...state,\n    //         count: state.count + 1\n    //     }\n    //     case 'DECREMENT':\n    //     return {\n    //         ...state,\n    //         count: state.count - 1\n    //     }\n    //     case 'RESET':\n    //     return {\n    //         ...state,\n    //         count: initialState.count\n    //     }\n    //     default:\n    //     return state\n    // }\n}\n\nexport const initializeStore = (preloadedState = initialState) => {\n    return createStore(\n        reducer,\n        preloadedState,\n        composeWithDevTools(applyMiddleware())\n    )\n}"]},"metadata":{},"sourceType":"module"}